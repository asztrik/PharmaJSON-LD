package pharma;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;


import pharma.Repository.EbiOlsRepository;
import pharma.Repository.OboNcitRepository;
import pharma.Term.AbstractTerm;
import pharma.Term.EbiOlsTerm;
import pharma.Term.OboNcitTerm;

@Controller    // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class StorageController {
	@Autowired // This means to get the bean called userRepository
	           // Which is auto-generated by Spring, we will use it to handle the data
	private EbiOlsRepository pharmaRepository;

	@Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
	private OboNcitRepository oboncitRepository;	
	
	@GetMapping(path="/addEbiOls") // Map ONLY GET Requests
	public @ResponseBody String addNewEbiOls (@RequestParam String iri
			, @RequestParam String synonym) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request

		EbiOlsTerm n = new EbiOlsTerm();
		n.setIri(iri);
		n.setSynonym(synonym);
		pharmaRepository.save(n);
		return "Saved";
	}

	@GetMapping(path="/addOboNcit") // Map ONLY GET Requests
	public @ResponseBody String addNewOboNcit (@RequestParam String iri
			, @RequestParam String synonym) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request

		OboNcitTerm n = new OboNcitTerm();
		n.setIri(iri);
		n.setSynonym(synonym);
		oboncitRepository.save(n);
		return "Saved";
	}	
	
	@GetMapping(path="/allEbiOls")
	public @ResponseBody Iterable<AbstractTerm> getAllEbiOls() {
		// This returns a JSON or XML with the users
		return pharmaRepository.findAll();
	}
	
	@GetMapping(path="/allOboNcit")
	public @ResponseBody Iterable<AbstractTerm> getAllOboncit() {
		// This returns a JSON or XML with the users
		return oboncitRepository.findAll();
	}	
}